apply plugin: 'com.android.application'
//apply plugin: 'com.google.gms.google-services'
apply plugin: 'kotlin-android'

android {

    compileSdkVersion 26
    buildToolsVersion '27.0.1'

    defaultConfig {
        applicationId 'ru.nekit.android.qls'
        minSdkVersion 16
        targetSdkVersion 26
        versionCode 15
        versionName "1.289"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    configurations {
        compile.exclude group: 'org.jetbrains', module: 'annotations'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

android.applicationVariants.all { variant ->
    variant.mergeAssets.doLast {
        File fonts = file("$variant.mergeAssets.outputDir/fonts")
        if (fonts.exists()) {
            for (File file : fonts.listFiles()) {
                if (file.getName().contains("RobotoSlab") ||
                        file.getName().contains("RobotoCondensed") ||
                        file.getName().contains("RobotoMono")) {
                    println("delete " + file.getName() + " font")
                    file.delete()
                }
            }
        }
    }
}

dependencies {
    compile 'com.android.support:multidex:1.0.2'
    compile 'io.github.jakob-grabner:Circle-Progress-View:v1.3'
    compile 'com.github.christophesmet:android_maskable_layout:v1.1.0'
    compile 'com.andrognito.patternlockview:patternlockview:1.0.0'
    compile 'com.github.pwittchen:swipe:0.1.0'
    compile 'com.google.firebase:firebase-ads:11.4.2'
    compile project(':sharedModule')
    compile project(':questData')
    /*compile files('libs/edm.jar')
    compile files('libs/license.jar')*/
}

repositories {
    mavenCentral()
}