apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {

    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    signingConfigs {
        release {
            storeFile project.KEYSTORE_STORE_FILE
            storePassword project.KEYSTORE_STORE_PASSWORD
            keyAlias project.KEYSTORE_KEY_ALIAS
            keyPassword project.KEYSTORE_KEY_PASSWORD
        }
    }

    defaultConfig {
        applicationId ids.application
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targetSdk
        versionCode versions.appCode
        versionName versions.appName
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/rxjava.properties'
    }

    configurations {
        compile.exclude group: 'org.jetbrains', module: 'annotations'
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
    }
}

dependencies {

    implementation deps.support.multidex
    implementation deps.circleProgress
    implementation deps.patternLockView
    implementation deps.maskableLayout
    implementation deps.firebase.ads
    implementation deps.firebase.crash
    implementation deps.firebase.remoteConfig
    implementation deps.firebase.firestore
    implementation deps.support.constraintLayout
    implementation deps.flexbox

    api project(':sharedModule')
    api project(':questData')

}

repositories {
    mavenCentral()
}

apply plugin: 'com.google.gms.google-services'
